{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedKey","this","handleKeyPress","document","removeEventListener","addEventListener","event","setState","key","className","Component","ReactDOM","render","getElementById"],"mappings":"2MAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WACEC,KAAKC,mBANT,kCASE,WACEC,SAASC,oBAAoB,QAASH,KAAKC,kBAV/C,4BAaE,WAAkB,IAAD,OACfC,SAASE,iBAAiB,SAAS,SAACC,GAClC,EAAKC,SAAS,CAAEP,WAAYM,EAAME,WAfxC,oBAmBE,WACE,IAAQR,EAAeC,KAAKF,MAApBC,WAER,OACE,qBAAKS,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAC6B,KAA1BR,KAAKF,MAAMC,WACR,0BADH,mCAE+BA,EAF/B,aAzBX,GAAyBU,a,MCDzBC,IAASC,OACP,cAAC,EAAD,IACAT,SAASU,eAAe,W","file":"static/js/main.ade6f13a.chunk.js","sourcesContent":["import { Component } from 'react';\n\ntype State = {\n  pressedKey: string;\n};\n\nexport class App extends Component<{}, State> {\n  state = {\n    pressedKey: '',\n  };\n\n  componentDidMount() {\n    this.handleKeyPress();\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', this.handleKeyPress);\n  }\n\n  handleKeyPress() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      this.setState({ pressedKey: event.key });\n    });\n  }\n\n  render() {\n    const { pressedKey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {this.state.pressedKey === ''\n            ? 'Nothing was pressed yet'\n            : `The last pressed key is [${pressedKey}]`}\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}